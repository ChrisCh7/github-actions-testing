name: Create Release Branch

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for full git history

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get latest release branch
        id: get_latest_release
        run: |
          latest_release_branch=$(git branch -r | grep 'origin/release/' | sed 's|origin/||' | sort -V | tail -n1 | xargs)
          echo "latest_release_branch=${latest_release_branch}" >> $GITHUB_OUTPUT

      - name: Check if develop has new commits
        id: check_diff
        run: |
          develop_commit=$(git rev-parse origin/develop)
          release_commit=$(git rev-parse origin/${{ steps.get_latest_release.outputs.latest_release_branch }})

          echo "develop_commit=$develop_commit"
          echo "release_commit=$release_commit"

          if git merge-base --is-ancestor $develop_commit $release_commit; then
            echo "is_up_to_date=true" >> $GITHUB_OUTPUT
          else
            echo "is_up_to_date=false" >> $GITHUB_OUTPUT
          fi

      - name: Create release branch
        if: steps.check_diff.outputs.is_up_to_date == 'false'
        run: |
          git checkout origin/develop
          git checkout -b release/${{ github.event.inputs.release_name }}
          git push origin release/${{ github.event.inputs.release_name }}

      - name: Create PR to master
        if: steps.check_diff.outputs.is_up_to_date == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Release ${{ github.event.inputs.release_name }}" \
            --body "Auto-created PR to merge release/${{ github.event.inputs.release_name }} into master." \
            --head release/${{ github.event.inputs.release_name }} \
            --base master
